[
  {
    "feature_name": "GENE_DELETION",
    "pattern": "<GENE><->?<other><->?<MARKER>",
    "other_regex": ["^(delta|Î´|del|d)$"]
  },
  {
    "feature_name": "GENE_DELETION",
    "pattern": "<GENE><->?<MARKER>",
    "other_regex": []
  },
  {
    "feature_name": "dummy_matching_PROMOTER_GENE",
    "pattern": "<other><GENE>",
    "other_regex": ["^(dummy)$"]
  },
  {
    "feature_name": "PROMOTER_GENE",
    "pattern": "<other><->?<GENE><->?",
    "other_regex": ["(?<![a-z])p$"]
  },
  {
    "feature_name": "REGULATOR",
    "pattern": "<PROMOTER_GENE>",
    "other_regex": [""]
  },
  {
    "feature_name": "ALLELE_AA_SUBSTITUTION",
    "pattern": "<GENE><->?<other>",
    "other_regex": [
      "\\(?([gpavlimcfywhkrqnedst]\\d+[gpavlimcfywhkrqnedst]\\,?)+\\,?\\)?"
    ]
  },
  {
    "feature_name": "C_Terminal_Tagging",
    "pattern": "(<GENE>|<ALLELE>)<->?<TAG>",
    "other_regex": []
  },
  {
    "feature_name": "PRODUCT",
    "pattern": "<C_Terminal_Tagging>",
    "other_regex": []
  },
  {
    "feature_name": "PROMOTER_PRODUCT",
    "pattern": "<C_Terminal_Tagging>",
    "other_regex": []
  },
  {
    "feature_name": "WILD_TYPE_ALLELE",
    "pattern": "<GENE><other>",
    "other_regex": ["\\+"]
  },
  {
    "feature_name": "INSERTION_LOCUS",
    "pattern": "(<GENE>|<ALLELE>)<->(?=<REGULATOR>?<PRODUCT>)",
    "other_regex": []
  }
]
